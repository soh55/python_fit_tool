# Autogenerated. Do not modify.
#
# Profile: {{ sdk_version }}
from typing import List as list
from fit_tool.data_message import DataMessage
from fit_tool.definition_message import DefinitionMessage
from fit_tool.developer_field import DeveloperField
from fit_tool.generic_message import GenericMessage

{% for name in message_names %}
from fit_tool.profile.messages.{{name[1]}} import {{name[0]}}
{%- endfor %}

class MessageFactory:

    @staticmethod
    def from_definition(definition_message: DefinitionMessage, developer_fields: list[DeveloperField]) -> DataMessage:


{%- for class_name in message_class_names %}
{% if loop.first %}
        if definition_message.global_id == {{class_name}}.ID:
{%- endif -%}
{%- if not loop.first %}
        elif definition_message.global_id == {{class_name}}.ID:
{%- endif %}
            return {{class_name}}(definition_message=definition_message, developer_fields=developer_fields)
{%- endfor %}
        else:
            return GenericMessage(definition_message=definition_message, developer_fields=developer_fields)
